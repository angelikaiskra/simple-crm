## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Authorization managment'
description: |-

  API's for login, register and logout in basic way
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: 'Register user'
      description: 'This endpoint allows you to register a user in standard way using an email'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      login:
        name: login
        description: 'User''s login.'
        required: true
        example: PrettyWoman
        type: string
      name:
        name: name
        description: 'User''s name.'
        required: true
        example: Adam
        type: string
      surname:
        name: surname
        description: 'User''s surname.'
        required: true
        example: Kowalski
        type: string
      date_of_birth:
        name: date_of_birth
        description: 'User''s date of birth.'
        required: true
        example: '2000-10-10'
        type: date
      password:
        name: password
        description: 'User''s Password - automatically encrypts with bcrypt.'
        required: true
        example: password
        type: string
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation of user''s password.'
        required: true
        example: password
        type: string
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Pomyślnie zarejestrowano użytkownika",
            "data": {
                  "id": 54
            }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Login user'
      description: 'This endpoint allows you to login a user in a standard way using an email'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      login:
        name: login
        description: 'Must not be greater than 255 characters.'
        required: true
        example: creptwpendqcewysmfmjgoobaiwhgqtchwjxucikzsokzhnxbyldozixrdhbnnvwayrbyyrlevlcujbpvexpctqtqqgkiajbfovdxyqlepycufwvwrlxgntimtzjakiefrfcezonjyhhbsaejmvfireehoebvmqqjafsomkbawxzntmhzwwrgifwgrqwirojnumjpmenfyovypydlwxpgrhklceqntipabwctkniifi
        type: string
      password:
        name: password
        description: 'User''s Password - automatically encrypts with bcrypt.'
        required: true
        example: password
        type: string
      email:
        name: email
        description: 'User''s Email.'
        required: true
        example: definetly@not.admin
        type: string
    responses:
      -
        status: 201
        content: |-
          {
          "data": {
          "user": {
          "id": 54,
          "name": "Angelika",
          "surname": "Iskra",
          "date_of_birth": "2000-10-27",
          "login": "admin123456",
          "deleted_at": null,
          "created_at": "2021-12-20T13:38:00.000000Z",
          "updated_at": "2021-12-20T13:38:00.000000Z",
          "role": "user",
          "roles": [
          {
          "id": 1,
          "name": "user",
          "guard_name": "web",
          "created_at": "2021-12-20T13:08:58.000000Z",
          "updated_at": "2021-12-20T13:08:58.000000Z",
          "pivot": {
          "model_id": 54,
          "role_id": 1,
          "model_type": "App\\Models\\User"
          }
          }
          ]
          },
          "token": "6|sBlAGXIEO3cWkW4cxSUwOgNJzFTIJRAMnlJXTkmz"
          }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/logout
    metadata:
      title: 'Logouts user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "message": "Pomyślnie wylogowano"
          }
        headers: []
        description: '201'
    responseFields: []
